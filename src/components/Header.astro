---
const currentPath = Astro.url.pathname;
const navItems = [
  { name: 'Home', href: '/' },
  { name: 'Projects', href: '/projects' },
  { name: 'Resume', href: '/resume' },
  { name: 'Contact', href: '/contact' },
];
---

<header class="bg-white/95 backdrop-blur-md shadow-sm sticky top-0 z-50 border-b border-gray-100">
  <nav class="max-w-7xl mx-auto px-6 lg:px-8">
    <div class="flex justify-between items-center h-20">
      <!-- Logo -->
      <div class="flex-shrink-0">
        <a href="/" class="text-2xl font-bold text-blue-600 hover:text-blue-700 transition-colors duration-200">
          Claude
        </a>
      </div>

      <!-- Desktop Navigation -->
      <div class="hidden md:flex items-center space-x-1">
        {navItems.map((item) => (
          <a
            href={item.href}
            class:list={[
              'px-4 py-2 rounded-lg text-sm font-medium transition-all duration-200',
              currentPath === item.href
                ? 'text-blue-600 bg-blue-50'
                : 'text-gray-700 hover:text-blue-600 hover:bg-gray-50'
            ]}
          >
            {item.name}
          </a>
        ))}
      </div>

      <!-- Mobile menu button -->
      <div class="md:hidden">
        <button
          id="mobile-menu-button"
          type="button"
          class="inline-flex items-center justify-center p-2 rounded-lg text-gray-700 hover:text-blue-600 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-blue-500 transition-colors duration-200"
          aria-controls="mobile-menu"
          aria-expanded="false"
        >
          <span class="sr-only">Open main menu</span>
          <!-- Hamburger icon -->
          <svg class="block h-6 w-6 menu-icon" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
          </svg>
          <!-- Close icon -->
          <svg class="hidden h-6 w-6 close-icon" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
          </svg>
        </button>
      </div>
    </div>

    <!-- Mobile menu -->
    <div class="md:hidden hidden transition-all duration-300 ease-in-out" id="mobile-menu">
      <div class="px-2 pt-2 pb-4 space-y-1 bg-white border-t border-gray-100">
        {navItems.map((item) => (
          <a
            href={item.href}
            class:list={[
              'block px-4 py-3 rounded-lg text-base font-medium transition-all duration-200',
              currentPath === item.href
                ? 'text-blue-600 bg-blue-50'
                : 'text-gray-700 hover:text-blue-600 hover:bg-gray-50'
            ]}
          >
            {item.name}
          </a>
        ))}
      </div>
    </div>
  </nav>
</header>

<script>
  const mobileMenuButton = document.getElementById('mobile-menu-button');
  const mobileMenu = document.getElementById('mobile-menu');
  const menuIcon = mobileMenuButton?.querySelector('.menu-icon');
  const closeIcon = mobileMenuButton?.querySelector('.close-icon');

  mobileMenuButton?.addEventListener('click', () => {
    const isExpanded = mobileMenuButton.getAttribute('aria-expanded') === 'true';
    mobileMenuButton.setAttribute('aria-expanded', String(!isExpanded));
    mobileMenu?.classList.toggle('hidden');

    // Toggle icons
    menuIcon?.classList.toggle('hidden');
    menuIcon?.classList.toggle('block');
    closeIcon?.classList.toggle('hidden');
    closeIcon?.classList.toggle('block');
  });

  // Close menu when clicking outside
  document.addEventListener('click', (event) => {
    const target = event.target as HTMLElement;
    if (!mobileMenuButton?.contains(target) && !mobileMenu?.contains(target)) {
      mobileMenu?.classList.add('hidden');
      mobileMenuButton?.setAttribute('aria-expanded', 'false');
      menuIcon?.classList.remove('hidden');
      menuIcon?.classList.add('block');
      closeIcon?.classList.add('hidden');
      closeIcon?.classList.remove('block');
    }
  });
</script>
